package br.com.rafaellino.stockmarket.service;

import br.com.rafaellino.stockmarket.StockPriceGrpc;
import br.com.rafaellino.stockmarket.StockRequest;
import br.com.rafaellino.stockmarket.StockResponse;
import io.grpc.stub.StreamObserver;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.grpc.server.service.GrpcService;

import java.time.Instant;

@GrpcService // exposed as gRPC service
public class StockPriceImpl extends StockPriceGrpc.StockPriceImplBase { // generated by `mvn generate-sources` in target

  private static final Logger log = LoggerFactory.getLogger(StockPriceImpl.class);

  @Override
  public void getStockPrice(StockRequest request, StreamObserver<StockResponse> responseObserver) {
    log.info("response received of symbol {}", request.getSymbol());
    StockResponse response = StockResponse.newBuilder().setPrice(12).setSymbol(request.getSymbol()).setTimestamp(Instant.now().toEpochMilli()).build();
    responseObserver.onNext(response);
    responseObserver.onCompleted();
    log.info("response done");
  }
}
